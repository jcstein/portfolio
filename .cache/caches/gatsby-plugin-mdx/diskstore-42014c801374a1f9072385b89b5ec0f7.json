{"expireTime":9007200891842827000,"key":"gatsby-plugin-mdx-entire-payload-a6776d6e4a6eb07d85c8849ffc5c3d98-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This is a Web3 dApp on Solana that allows users to login with their Phantom wallet on the devnet and send their favorite cat GIF. Uses Rust + Solana + React Web3 App that anyone with a Solana wallet can interact with.","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":218,"offset":218},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":218,"offset":218},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Buildspace: Build a Solana App | Cohort Alkes | #29\",\"category\":\"Web3 Solana\",\"emoji\":\"☀️\",\"screenshot\":\"./GIF-Portal.png\",\"github\":\"https://opensea.io/assets/matic/0x3CD266509D127d0Eac42f4474F57D0526804b44e/2599?force_update=true\",\"external\":\"https://solana.jcstein.dev\",\"tags\":[\"Solana Blockchain\",\"Rust\",\"Web3 dApp\"],\"visible\":true,\"position\":1}","position":{"start":{"line":4,"column":1,"offset":220},"end":{"line":4,"column":387,"offset":606},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":4,"column":387,"offset":606}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Buildspace: Build a Solana App | Cohort Alkes | #29\",\n  \"category\": \"Web3 Solana\",\n  \"emoji\": \"☀️\",\n  \"screenshot\": \"./GIF-Portal.png\",\n  \"github\": \"https://opensea.io/assets/matic/0x3CD266509D127d0Eac42f4474F57D0526804b44e/2599?force_update=true\",\n  \"external\": \"https://solana.jcstein.dev\",\n  \"tags\": [\"Solana Blockchain\", \"Rust\", \"Web3 dApp\"],\n  \"visible\": true,\n  \"position\": 1\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This is a Web3 dApp on Solana that allows users to login with their Phantom wallet on the devnet and send their favorite cat GIF. Uses Rust + Solana + React Web3 App that anyone with a Solana wallet can interact with.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Buildspace: Build a Solana App | Cohort Alkes | #29\",\n  \"category\": \"Web3 Solana\",\n  \"emoji\": \"☀️\",\n  \"screenshot\": \"./GIF-Portal.png\",\n  \"github\": \"https://opensea.io/assets/matic/0x3CD266509D127d0Eac42f4474F57D0526804b44e/2599?force_update=true\",\n  \"external\": \"https://solana.jcstein.dev\",\n  \"tags\": [\"Solana Blockchain\", \"Rust\", \"Web3 dApp\"],\n  \"visible\": true,\n  \"position\": 1\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`This is a Web3 dApp on Solana that allows users to login with their Phantom wallet on the devnet and send their favorite cat GIF. Uses Rust + Solana + React Web3 App that anyone with a Solana wallet can interact with.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}